[{"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\index.js":"1","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\reportWebVitals.js":"2","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\App.js":"3","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Login.js":"4","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Home.js":"5","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\NoMatch.js":"6","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ResetPassword.js":"7","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Deregister.js":"8","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\VerifyEmail.js":"9","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Register.js":"10","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth.service.js":"11","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ForgotPassword.js":"12","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Admin\\AddTokens.js":"13","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ChangePassword.js":"14","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Profile.js":"15","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardAdmin.js":"16","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardModerator.js":"17","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardUser.js":"18","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\EditPPT.js":"19","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\PPTFileList.js":"20","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\Playlist.js":"21","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\UploadImage.js":"22","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\EditImage.js":"23","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\ExecuteService.js":"24","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\UploadVideo.js":"25","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth-header.js":"26","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\user.service.js":"27","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\playlist.service.js":"28","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\file-upload.service.js":"29","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\tools\\GlobalData.js":"30","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\ppt.service.js":"31","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\image.service.js":"32","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\video.service.js":"33","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\execute.service.js":"34"},{"size":618,"mtime":1614707124175,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1614707124175,"results":"37","hashOfConfig":"36"},{"size":5895,"mtime":1615506214747,"results":"38","hashOfConfig":"36"},{"size":4150,"mtime":1615056984168,"results":"39","hashOfConfig":"36"},{"size":808,"mtime":1615503082594,"results":"40","hashOfConfig":"36"},{"size":291,"mtime":1614889937314,"results":"41","hashOfConfig":"36"},{"size":7839,"mtime":1614707124161,"results":"42","hashOfConfig":"36"},{"size":3788,"mtime":1615056986392,"results":"43","hashOfConfig":"36"},{"size":2087,"mtime":1614707124167,"results":"44","hashOfConfig":"36"},{"size":6674,"mtime":1615056992178,"results":"45","hashOfConfig":"36"},{"size":3181,"mtime":1615400533410,"results":"46","hashOfConfig":"36"},{"size":4299,"mtime":1615056985335,"results":"47","hashOfConfig":"36"},{"size":2701,"mtime":1614707124171,"results":"48","hashOfConfig":"36"},{"size":6936,"mtime":1614707124159,"results":"49","hashOfConfig":"36"},{"size":2961,"mtime":1614707124172,"results":"50","hashOfConfig":"36"},{"size":774,"mtime":1614707124171,"results":"51","hashOfConfig":"36"},{"size":786,"mtime":1614707124171,"results":"52","hashOfConfig":"36"},{"size":771,"mtime":1614707124171,"results":"53","hashOfConfig":"36"},{"size":3882,"mtime":1615484798729,"results":"54","hashOfConfig":"36"},{"size":4401,"mtime":1614707124170,"results":"55","hashOfConfig":"36"},{"size":19875,"mtime":1615578428443,"results":"56","hashOfConfig":"36"},{"size":21931,"mtime":1615347042258,"results":"57","hashOfConfig":"36"},{"size":17796,"mtime":1615484781418,"results":"58","hashOfConfig":"36"},{"size":6583,"mtime":1615400643418,"results":"59","hashOfConfig":"36"},{"size":22887,"mtime":1615506287627,"results":"60","hashOfConfig":"36"},{"size":248,"mtime":1614707124176,"results":"61","hashOfConfig":"36"},{"size":924,"mtime":1615400707980,"results":"62","hashOfConfig":"36"},{"size":1626,"mtime":1615579318521,"results":"63","hashOfConfig":"36"},{"size":1311,"mtime":1615400572033,"results":"64","hashOfConfig":"36"},{"size":97,"mtime":1615402269156,"results":"65","hashOfConfig":"36"},{"size":1458,"mtime":1615400589433,"results":"66","hashOfConfig":"36"},{"size":2007,"mtime":1615400579867,"results":"67","hashOfConfig":"36"},{"size":948,"mtime":1615400717393,"results":"68","hashOfConfig":"36"},{"size":820,"mtime":1615400700203,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nknqnq",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\index.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\reportWebVitals.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\App.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Login.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Home.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\NoMatch.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ResetPassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Deregister.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\VerifyEmail.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Register.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth.service.js",["140"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ForgotPassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Admin\\AddTokens.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ChangePassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Profile.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardAdmin.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardModerator.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardUser.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\EditPPT.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\PPTFileList.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\Playlist.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputIcon from '@material-ui/icons/Create';\r\nimport InsertLink from '@material-ui/icons/InsertLink';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ReactPlayer from 'react-player';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport FolderSharedIcon from '@material-ui/icons/FolderShared';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    Image,\r\n    Button,\r\n    ListGroup,\r\n    Media,\r\n} from 'react-bootstrap';\r\n\r\nimport PlaylistService from '../../../services/playlist.service';\r\nimport { LinearProgress, Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 110,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    linkInput: {\r\n        width: \"100%\",\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    linerProgress: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    }\r\n}));\r\n\r\nconst getVideoId = (url) => {\r\n    return url.split(\"?v=\")[1];\r\n} \r\n\r\n\r\n\r\nconst MyVerticallyCenteredModal = (props) => {\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Video window\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ReactPlayer url={props.playUrl} playing={true} width='100%' />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst SettingDialog = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Playlist Infomation\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <TextField\r\n                    className={classes.linkInput}\r\n                    id=\"input-with-icon-textfield-top\"\r\n                    placeholder=\"Input a new playlist name to change.\"\r\n                    value={props.currentPlaylistTitle}\r\n                    onChange={(e) => props.setCurrentPlaylistTitle(e.target.value)}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                        <InputIcon />\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <Select className=\"mr-4\"\r\n                      style={{width: \"100px\"}}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={props.currentPlaylistStatus}\r\n                      onChange={(e) => props.setCurrentPlaylistStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={1}>Public</MenuItem>\r\n                        <MenuItem value={0}>Private</MenuItem>\r\n                    </Select>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" onClick={props.onSave}>Save</Button>\r\n                <Button variant=\"secondary\" onClick={props.onDelete}>Delete</Button>\r\n                <Button variant=\"primary\" onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [pageNumber, setPageNumber] = React.useState(localStorage.getItem('playlistpage') ? Number(localStorage.getItem('playlistpage')) : 1);\r\n    const [itemsPerPage] = React.useState(10);\r\n    const [totalPages, setTotalPages] = React.useState(1);\r\n    const [treeData, setTreeData] = useState('');\r\n    const [selected, setSelected] = useState('root');\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [expanded, setExpanded] = useState([]);\r\n    const [progressVisible, setProgressVisible] = useState(false);\r\n    const [videoData, setVideoData] = useState([]);\r\n    const [videoInfos, setVideoInfos] = useState([]);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const [settingShow, setSettingShow] = useState(false);\r\n    const [playUrl, setPlayUrl] = useState(null);\r\n    const [playlistTitle, setPlaylistTitle] = useState('');\r\n    const [playlistStatus, setPlaylistStatus] = useState(1);\r\n    const [currentPlaylistId, setCurrentPlaylistId] = useState('');\r\n    const [playlistData, setPlaylistData] = useState([]);\r\n    const [currentPlaylistTitle, setCurrentPlaylistTitle] = useState('');\r\n    const [currentPlaylistStatus, setCurrentPlaylistStatus] = useState('');\r\n    \r\n    React.useEffect(() => {\r\n        getAllPlaylists();\r\n    }, [])\r\n\r\n    const getAllPlaylists = () => {\r\n        PlaylistService.getAllPlaylist()\r\n            .then(async response => {\r\n                if(response.data && response.data.length>0) {\r\n                    setPlaylistData(response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n    // Add playlist\r\n    const upload = () => {\r\n\r\n        PlaylistService.addPlaylist(playlistTitle, playlistStatus)\r\n            .then(response => {\r\n                if (response.data.message === 'success') {\r\n                    getAllPlaylists();\r\n                    setPlaylistTitle('');\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleChangePageNumber = (pagenum)=>{\r\n        setPageNumber(pagenum);\r\n        localStorage.setItem('playlistpage', pagenum)\r\n    }\r\n\r\n    const handleChangeKeyword = (key) => {\r\n        const keyword = key.trim().toLowerCase();\r\n        const nodeId = selected;\r\n        let data = videoData.filter(item => {\r\n            let fileName = item.meta_keyword + item.meta_description + item.meta_title + getVideoId(item.video_id);\r\n            fileName = fileName.trim().toLowerCase();\r\n\r\n            if (fileName.includes(keyword)) {\r\n                return 1;\r\n            } else {\r\n                return 0;\r\n            }\r\n        });\r\n\r\n        console.log(videoInfos)\r\n\r\n        if (keyword == \"\") {\r\n            setVideoInfos(videoData);\r\n        } else {\r\n            setVideoInfos(data);\r\n        }\r\n    \r\n        const total = Math.ceil(data.length / itemsPerPage);\r\n        setTotalPages(total);\r\n\r\n        localStorage.removeItem(\"playlistpage\");\r\n        setPageNumber(1);\r\n    }\r\n\r\n    const handleOnKeyDown = (e) => {\r\n        if (e.key === 'Enter' || e.keyCode === 13) {\r\n            setPlaylistTitle(e.target.value);\r\n            upload();\r\n        }\r\n    }\r\n\r\n    // Remove one video item\r\n    const handleRemoveItem = (id) => {\r\n      PlaylistService.removePlaylist(id)\r\n            .then(response => {\r\n                if (response.data.message === \"success\") {\r\n                    let arr = [...videoInfos];\r\n                    arr = arr.filter(item => item.id !== id);\r\n                    setVideoInfos(arr);\r\n                }\r\n            }).catch((err) => {\r\n                const resMessage = (\r\n                    err.response &&\r\n                    err.response.data &&\r\n                    err.response.data.message\r\n                ) || err.toString();\r\n\r\n                setMessage(resMessage);\r\n            });\r\n    }\r\n\r\n    // Play one video\r\n    const handlePlayVideo = (video_url) => {\r\n        setModalShow(true);\r\n        setPlayUrl(video_url);\r\n    }\r\n\r\n\r\n    const handleItemClick = (playlist_id, playlist_title, playlist_status) => {\r\n        setCurrentPlaylistId(playlist_id);\r\n        setCurrentPlaylistTitle(playlist_title);\r\n        setCurrentPlaylistStatus(playlist_status);\r\n\r\n        PlaylistService.getPlaylist(playlist_id)\r\n        .then(async response => {\r\n            if(response.data && response.data.length>0) {\r\n\r\n                setVideoData(response.data);\r\n                setVideoInfos(response.data);\r\n                \r\n                const total = Math.ceil(response.data.length / itemsPerPage);\r\n                setTotalPages(total);\r\n            } else {\r\n                setVideoInfos([]);\r\n            }\r\n        })\r\n    }\r\n\r\n    // delete\r\n    const handleSettingShow = () => {\r\n        setSettingShow(false)\r\n   \r\n        PlaylistService.removePlaylist(currentPlaylistId)\r\n            .then(response => {\r\n                if (response.data.message === 'success') {\r\n                    getAllPlaylists();\r\n                    setCurrentPlaylistId('');\r\n                }\r\n            })\r\n    }\r\n\r\n    // change\r\n    const handleSettingSave = () => {\r\n        setSettingShow(false)\r\n        console.log(currentPlaylistTitle, currentPlaylistStatus)\r\n        PlaylistService.changePlaylist(currentPlaylistId, currentPlaylistTitle, currentPlaylistStatus)\r\n        .then(response => {\r\n            if (response.data.message === 'success') {\r\n                getAllPlaylists();\r\n                setCurrentPlaylistId('');\r\n                setCurrentPlaylistTitle('');\r\n                setCurrentPlaylistStatus('');\r\n            }\r\n        })\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const renderTree = (nodes) => {\r\n        return (\r\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\r\n        </TreeItem>\r\n    )}\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"mb-3\">My Playlists</h2>\r\n            <Row className=\"mb-3\">\r\n                <Col md={4}>\r\n                    <TextField\r\n                        className={classes.linkInput}\r\n                        id=\"input-with-icon-textfield-top\"\r\n                        placeholder=\"Input new playlist title.\"\r\n                        value={playlistTitle}\r\n                        onChange={(e) => setPlaylistTitle(e.target.value)}\r\n                        onKeyDown={(e) => handleOnKeyDown(e)}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                            <InputIcon />\r\n                            </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Select className=\"mr-4\"\r\n                      style={{width: \"100px\"}}\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={playlistStatus}\r\n                      onChange={(e) => setPlaylistStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={1}>Public</MenuItem>\r\n                        <MenuItem value={0}>Private</MenuItem>\r\n                    </Select>\r\n                    <Button disabled={playlistTitle === ''} onClick={upload}>\r\n                        Add Playlist\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md={12}>\r\n                    {progressVisible && (\r\n                        <div className={classes.linerProgress}>\r\n                            <LinearProgress />\r\n                        </div>\r\n                    )}\r\n                    {message && (\r\n                        <Alert variant=\"success\" className=\"mt-3 upload_alert\" show={alertVisible}>\r\n                            <Alert.Heading>Add Result</Alert.Heading>\r\n                            {message}\r\n                        </Alert>\r\n                    )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={3} className=\"card\">\r\n                  <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                    \r\n                    {playlistData && (\r\n                        playlistData.map(item => {\r\n                            return (\r\n                                <ListItem button key={item.id}\r\n                                            selected={currentPlaylistId == item.playlist_id}\r\n                                            onClick={() => handleItemClick(item.playlist_id, item.playlist_title, item.playlist_status)}\r\n                                 >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            {item.playlist_status == 1 ? <FolderIcon /> : <FolderSharedIcon />}\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={item.playlist_title} />\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton edge=\"end\" aria-label=\"delete\" disabled={currentPlaylistId !== item.playlist_id} onClick={() => setSettingShow(true)}>\r\n                                            <SettingsIcon/>\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction>\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    )}\r\n\r\n                  </List>\r\n                </Col>\r\n                <Col md={9}>\r\n                    {videoInfos &&\r\n                        <VideoList \r\n                            videoInfos={videoInfos}\r\n                            totalPages={totalPages}\r\n                            itemsPerPage={itemsPerPage}\r\n                            currentPage={pageNumber}\r\n                            currentPlaylistId={currentPlaylistId}\r\n                            onChangeKeyword={handleChangeKeyword}\r\n                            onChangePageNumber={handleChangePageNumber}\r\n                            handleRemoveItem={handleRemoveItem}\r\n                            handlePlayVideo={handlePlayVideo}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n                playUrl={playUrl}\r\n            />\r\n            <SettingDialog\r\n                show={settingShow}\r\n                onHide={() => setSettingShow(false)}\r\n                onDelete={handleSettingShow}\r\n                onSave={handleSettingSave}\r\n                setCurrentPlaylistTitle={setCurrentPlaylistTitle}\r\n                setCurrentPlaylistStatus={setCurrentPlaylistStatus}\r\n                currentPlaylistTitle={currentPlaylistTitle}\r\n                currentPlaylistStatus={currentPlaylistStatus}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst VideoList = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const renderItem = (data) => (\r\n        <ListGroup.Item key={data.id}>\r\n            <Media>\r\n                <Image thumbnail src={data.meta_image} className=\"mr-3\" />\r\n                <Media.Body>\r\n                    <h5><span>{data.meta_title}</span></h5>\r\n                    <p style={{marginBottom: \"0px\"}}><span>ID : </span><code>{getVideoId(data.video_id)}</code></p>\r\n                    <p style={{marginBottom: \"2px\"}}><span>{data.meta_description}</span></p>\r\n                    {data.meta_keyword && (\r\n                        <p><small><span>Keywords : </span><span>{data.meta_keyword}</span></small></p>\r\n                    )}\r\n                    <p><small><i><span>Created Time : </span><span>{data.dateTime}</span></i></small></p>\r\n                    <Button variant=\"success\" size=\"sm\" className=\"mr-3\" onClick={() => props.handlePlayVideo(data.video_id)}>Play</Button>\r\n                    <Button variant=\"primary\" size=\"sm\" onClick={() => props.handleRemoveItem(data.id)}>Remove</Button>\r\n                </Media.Body>\r\n            </Media>\r\n        </ListGroup.Item>\r\n    );\r\n\r\n    const showPagenationItem = () => {\r\n\r\n        return (\r\n            <Pagination\r\n                color=\"primary\"\r\n                className=\"mt-3\"\r\n                shape=\"rounded\"\r\n                count={props.totalPages}\r\n                page={props.currentPage}\r\n                onChange={(event, val)=>props.onChangePageNumber(val)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const doSomethingWith = (e) => {\r\n        if (e.key === 'Enter' || e.keyCode === 13) {\r\n            props.onChangeKeyword(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <Paper style={{margin:\"5px\"}}>\r\n                    <TextField\r\n                        disabled\r\n                        className={classes.margin}\r\n                        value={props.currentPlaylistId && 'http://videnda.com/playlist/' + props.currentPlaylistId}\r\n                        style={{width: \"85%\"}}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <InsertLink />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <Button onClick={() => {navigator.clipboard.writeText('http://videnda.com/playlist/' + props.currentPlaylistId)}}>Copy</Button>\r\n                </Paper>\r\n                <TextField\r\n                    className={classes.margin}\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder=\"Search\"\r\n                    onKeyDown={doSomethingWith}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                        </InputAdornment>\r\n                    ),\r\n                    }}\r\n                />\r\n                <h3 className=\"card-header\">List of Videos</h3>\r\n                <ListGroup variant=\"flush\">\r\n                    {props.videoInfos\r\n                        && (props.videoInfos.map((video, index) => {\r\n                            if((props.currentPage-1)*props.itemsPerPage <=index && (props.currentPage)*props.itemsPerPage > index ) {\r\n                                return renderItem(video)\r\n                            } else {\r\n                                return null\r\n                            }\r\n                        }))}\r\n                    { props.currentPlaylistId == '' &&\r\n                        <h3 className=\"m-auto\">Select a playlist.</h3>\r\n                    }\r\n                </ListGroup>\r\n                {showPagenationItem()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n",["156","157"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\UploadImage.js",["158","159","160"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\EditImage.js",["161","162","163","164"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\ExecuteService.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\UploadVideo.js",["165","166"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth-header.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\user.service.js",["167"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\playlist.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\file-upload.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\tools\\GlobalData.js",["168"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\ppt.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\image.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\video.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\execute.service.js",["169"],{"ruleId":"170","severity":1,"message":"171","line":134,"column":1,"nodeType":"172","endLine":146,"endColumn":3},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"177","line":138,"column":1,"nodeType":"172","endLine":424,"endColumn":2},{"ruleId":"173","severity":1,"message":"178","line":143,"column":12,"nodeType":"175","messageId":"176","endLine":143,"endColumn":20},{"ruleId":"173","severity":1,"message":"179","line":143,"column":22,"nodeType":"175","messageId":"176","endLine":143,"endColumn":33},{"ruleId":"173","severity":1,"message":"180","line":144,"column":22,"nodeType":"175","messageId":"176","endLine":144,"endColumn":33},{"ruleId":"173","severity":1,"message":"181","line":145,"column":26,"nodeType":"175","messageId":"176","endLine":145,"endColumn":41},{"ruleId":"173","severity":1,"message":"182","line":146,"column":12,"nodeType":"175","messageId":"176","endLine":146,"endColumn":20},{"ruleId":"173","severity":1,"message":"183","line":146,"column":22,"nodeType":"175","messageId":"176","endLine":146,"endColumn":33},{"ruleId":"173","severity":1,"message":"184","line":147,"column":29,"nodeType":"175","messageId":"176","endLine":147,"endColumn":47},{"ruleId":"173","severity":1,"message":"185","line":192,"column":15,"nodeType":"175","messageId":"176","endLine":192,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":206,"column":21,"nodeType":"188","messageId":"189","endLine":206,"endColumn":23},{"ruleId":"173","severity":1,"message":"190","line":306,"column":75,"nodeType":"175","messageId":"176","endLine":306,"endColumn":85},{"ruleId":"186","severity":1,"message":"187","line":370,"column":73,"nodeType":"188","messageId":"189","endLine":370,"endColumn":75},{"ruleId":"186","severity":1,"message":"187","line":375,"column":67,"nodeType":"188","messageId":"189","endLine":375,"endColumn":69},{"ruleId":"186","severity":1,"message":"187","line":511,"column":47,"nodeType":"188","messageId":"189","endLine":511,"endColumn":49},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"173","severity":1,"message":"195","line":153,"column":36,"nodeType":"175","messageId":"176","endLine":153,"endColumn":44},{"ruleId":"196","severity":1,"message":"197","line":198,"column":8,"nodeType":"198","endLine":198,"endColumn":10,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":567,"column":62,"nodeType":"202","messageId":"203","endLine":567,"endColumn":64},{"ruleId":"173","severity":1,"message":"204","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":14},{"ruleId":"196","severity":1,"message":"197","line":102,"column":8,"nodeType":"198","endLine":102,"endColumn":15,"suggestions":"205"},{"ruleId":"196","severity":1,"message":"206","line":123,"column":8,"nodeType":"198","endLine":123,"endColumn":22,"suggestions":"207"},{"ruleId":"196","severity":1,"message":"208","line":261,"column":5,"nodeType":"175","endLine":261,"endColumn":14,"suggestions":"209"},{"ruleId":"196","severity":1,"message":"210","line":176,"column":8,"nodeType":"198","endLine":176,"endColumn":10,"suggestions":"211"},{"ruleId":"173","severity":1,"message":"195","line":195,"column":36,"nodeType":"175","messageId":"176","endLine":195,"endColumn":44},{"ruleId":"170","severity":1,"message":"171","line":24,"column":1,"nodeType":"172","endLine":30,"endColumn":3},{"ruleId":"170","severity":1,"message":"171","line":1,"column":1,"nodeType":"172","endLine":4,"endColumn":3},{"ruleId":"170","severity":1,"message":"171","line":20,"column":1,"nodeType":"172","endLine":23,"endColumn":3},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","'treeData' is assigned a value but never used.","'setTreeData' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'setAlertVisible' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'setProgressVisible' is assigned a value but never used.","'nodeId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'renderTree' is assigned a value but never used.","no-native-reassign",["212"],"no-negated-in-lhs",["213"],"'fileName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'itemsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["214"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Link' is defined but never used.",["215"],"React Hook React.useEffect has missing dependencies: 'isEditDescription', 'isRotate', 'itemsPerPage', and 'totalPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPageNumber' needs the current value of 'totalPage'.",["216"],"React Hook useEffect contains a call to 'setTotalPage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [imageHistory, itemsPerPage, isRotate] as a second argument to the useEffect Hook.",["217"],"React Hook React.useEffect has a missing dependency: 'getAllVideos'. Either include it or remove the dependency array.",["218"],"no-global-assign","no-unsafe-negation",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [itemsPerPage]",{"range":"229","text":"230"},"Update the dependencies array to be: [itemsPerPage, props]",{"range":"231","text":"232"},"Update the dependencies array to be: [imageHistory, isEditDescription, isRotate, itemsPerPage, totalPage]",{"range":"233","text":"234"},"Add dependencies array: [imageHistory, itemsPerPage, isRotate]",{"range":"235","text":"236"},"Update the dependencies array to be: [getAllVideos]",{"range":"237","text":"238"},[7864,7866],"[itemsPerPage]",[3987,3994],"[itemsPerPage, props]",[4729,4743],"[imageHistory, isEditDescription, isRotate, itemsPerPage, totalPage]",[9566,9566],", [imageHistory, itemsPerPage, isRotate]",[6126,6128],"[getAllVideos]"]