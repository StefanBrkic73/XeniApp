[{"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\index.js":"1","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\reportWebVitals.js":"2","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\App.js":"3","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Register.js":"4","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\NoMatch.js":"5","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth.service.js":"6","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Home.js":"7","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Login.js":"8","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ChangePassword.js":"9","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ForgotPassword.js":"10","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\VerifyEmail.js":"11","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Deregister.js":"12","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ResetPassword.js":"13","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardUser.js":"14","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardAdmin.js":"15","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Profile.js":"16","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardModerator.js":"17","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Admin\\AddTokens.js":"18","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\ExecuteService.js":"19","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\PPTFileList.js":"20","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\EditPPT.js":"21","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\UploadImage.js":"22","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\EditImage.js":"23","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\Playlist.js":"24","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\UploadVideo.js":"25","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\VideoList.js":"26","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\user.service.js":"27","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth-header.js":"28","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\video.service.js":"29","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\MutipleSelect.js":"30","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\image.service.js":"31","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\file-upload.service.js":"32","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\playlist.service.js":"33","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\MutipleSelect.js":"34","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\tools\\GlobalData.js":"35","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\execute.service.js":"36","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\ppt.service.js":"37","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\MyVerticallyCenteredModal.js":"38"},{"size":618,"mtime":1614710724175,"results":"39","hashOfConfig":"40"},{"size":375,"mtime":1614710724175,"results":"41","hashOfConfig":"40"},{"size":6035,"mtime":1615660569480,"results":"42","hashOfConfig":"40"},{"size":6674,"mtime":1615060592178,"results":"43","hashOfConfig":"40"},{"size":291,"mtime":1614893537314,"results":"44","hashOfConfig":"40"},{"size":3181,"mtime":1615404133410,"results":"45","hashOfConfig":"40"},{"size":808,"mtime":1615506682594,"results":"46","hashOfConfig":"40"},{"size":4150,"mtime":1615060584168,"results":"47","hashOfConfig":"40"},{"size":6936,"mtime":1614710724159,"results":"48","hashOfConfig":"40"},{"size":4299,"mtime":1615060585335,"results":"49","hashOfConfig":"40"},{"size":2087,"mtime":1614710724167,"results":"50","hashOfConfig":"40"},{"size":3788,"mtime":1615060586392,"results":"51","hashOfConfig":"40"},{"size":7839,"mtime":1614710724161,"results":"52","hashOfConfig":"40"},{"size":771,"mtime":1614710724171,"results":"53","hashOfConfig":"40"},{"size":774,"mtime":1614710724171,"results":"54","hashOfConfig":"40"},{"size":2961,"mtime":1614710724172,"results":"55","hashOfConfig":"40"},{"size":786,"mtime":1614710724171,"results":"56","hashOfConfig":"40"},{"size":2701,"mtime":1614710724171,"results":"57","hashOfConfig":"40"},{"size":6583,"mtime":1615404243418,"results":"58","hashOfConfig":"40"},{"size":4401,"mtime":1614710724170,"results":"59","hashOfConfig":"40"},{"size":3882,"mtime":1615488398729,"results":"60","hashOfConfig":"40"},{"size":21931,"mtime":1615350642258,"results":"61","hashOfConfig":"40"},{"size":17754,"mtime":1615589403701,"results":"62","hashOfConfig":"40"},{"size":24401,"mtime":1616053991693,"results":"63","hashOfConfig":"40"},{"size":31373,"mtime":1616053954547,"results":"64","hashOfConfig":"40"},{"size":14133,"mtime":1616053987822,"results":"65","hashOfConfig":"40"},{"size":924,"mtime":1615404307980,"results":"66","hashOfConfig":"40"},{"size":248,"mtime":1614710724176,"results":"67","hashOfConfig":"40"},{"size":1693,"mtime":1615948688814,"results":"68","hashOfConfig":"40"},{"size":2599,"mtime":1616047963130,"results":"69","hashOfConfig":"40"},{"size":2007,"mtime":1615404179867,"results":"70","hashOfConfig":"40"},{"size":1311,"mtime":1615404172033,"results":"71","hashOfConfig":"40"},{"size":1927,"mtime":1615604620412,"results":"72","hashOfConfig":"40"},{"size":2512,"mtime":1615947495450,"results":"73","hashOfConfig":"40"},{"size":97,"mtime":1615405869156,"results":"74","hashOfConfig":"40"},{"size":820,"mtime":1615404300203,"results":"75","hashOfConfig":"40"},{"size":1458,"mtime":1615404189433,"results":"76","hashOfConfig":"40"},{"size":5112,"mtime":1616057273977,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"nknqnq",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\index.js",[],["163","164"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\reportWebVitals.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\App.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Register.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\NoMatch.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth.service.js",["165"],"import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\n\r\nimport GlobalData from \"../tools/GlobalData\";\r\n\r\nconst API_URL = GlobalData.back_end_server_ip + ':' + GlobalData.back_end_server_port + '/api/auth/';\r\n//const API_URL = `http://local--host:3030/api/auth/`;\r\n//const API_URL = 'http://15-8.69.222.102:3030/api/auth/';\r\n//const API_URL = 'http://127.0.0.1:3030/api/auth/';\r\n//const API_URL = ''\r\n\r\naxios.interceptors.response.use(\r\n    response => {\r\n        return response\r\n    },\r\n    error => {\r\n        if (!error.response) {\r\n            console.log(\"Connection to local-host failed err=\" + error.message);\r\n        }\r\n\r\n        return Promise.reject(error)\r\n    }\r\n);\r\n\r\nconst register = (username, email, password) => {\r\n  console.log(\"front console = register with axios, url=\" + API_URL);\r\n  try{\r\n   return axios.post( API_URL + \"signup\", {\r\n     username,\r\n     email,\r\n     password,\r\n   });\r\n  }catch( err){\r\n\tconsole.log( \"axios post error=\" + err.message);\r\n  }\r\n  return \"{error}\";\r\n};\r\n\r\nconst login = (email, password) => {\r\n  console.log(API_URL);\r\n  return axios\r\n    .post(API_URL + \"signin\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst changePassword = (oldPassword, newPassword)=>{\r\n\r\n  let token = authHeader();\r\n\r\n  return axios\r\n    .post(API_URL+\"changePassword\",\r\n      {oldPassword, newPassword},\r\n      {headers: token}\r\n    ).then(response=>{\r\n      return response;\r\n    })\r\n}\r\n\r\nconst deregister = (email, password)=>{\r\n  let token = authHeader();\r\n  return axios\r\n    .post(API_URL+\"deregister\",\r\n      {email,password},\r\n      {headers: token}\r\n    ).then(response=>{\r\n      return response;\r\n    })\r\n}\r\n\r\nconst forgotPassword = (email)=>{\r\n  return axios\r\n    .post(API_URL+\"forgotPassword\",\r\n      {email}\r\n    ).then(response=>{\r\n      return response;\r\n    });\r\n}\r\nconst verifyEmail=(obj=>{\r\n  return axios\r\n    .post(API_URL+\"verifyEmail\",\r\n      obj\r\n    ).then(response=>{\r\n      return response;\r\n    });\r\n})\r\nconst resetPassword=(obj)=>{\r\n  return axios.post(\r\n    API_URL+\"resetPassword\",\r\n    obj\r\n  ).then(response=>{\r\n    return response;\r\n  })\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n};\r\n\r\nconst resendVerifyEmail = () =>{\r\n  const token = authHeader();\r\n  return axios.post(API_URL+\"resendVerifyEmail\", {}, {\r\n    headers: token\r\n  }).then(response=>{\r\n    return response\r\n  });\r\n}\r\n\r\nconst getUserProfile = ()=>{\r\n  const token = authHeader();\r\n  return axios.post(API_URL+\"getUserProfile\", {}, {\r\n    headers: token\r\n  }).then(response=>{\r\n    if (response.data.accessToken) {\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n    }\r\n    return response.data;\r\n  })\r\n}\r\n\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  changePassword,\r\n  deregister,\r\n  forgotPassword,\r\n  resetPassword,\r\n  verifyEmail,\r\n  getCurrentUser,\r\n  resendVerifyEmail,\r\n  getUserProfile,\r\n};\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Home.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Login.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ChangePassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ForgotPassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\VerifyEmail.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\Deregister.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Auth\\ResetPassword.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardUser.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardAdmin.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Profile.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\BoardModerator.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\User\\Admin\\AddTokens.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\ExecuteService.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\PPTFileList.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\PPT\\EditPPT.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\UploadImage.js",["166","167","168"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TreeView from '@material-ui/lab/TreeView';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport TreeItem from '@material-ui/lab/TreeItem';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport {\r\n    Row,\r\n    Col,\r\n    Alert,\r\n    Image,\r\n    Button,\r\n    ListGroup,\r\n    ProgressBar,\r\n    Media,\r\n} from 'react-bootstrap';\r\n\r\nimport UploadService from '../../../services/file-upload.service';\r\nimport ImageService from '../../../services/image.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 110,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ImageUpload = () => {\r\n\r\n    const [currentFile, setCurrentFile] = React.useState(undefined);\r\n    const [previewImage, setPreviewImage] = React.useState(undefined);\r\n    const [progress, setProgress] = React.useState(0);\r\n    const [message, setMessage] = React.useState(\"\");\r\n    const [pageNumber, setPageNumber] = React.useState(localStorage.getItem('page') ? Number(localStorage.getItem('page')) : 1);\r\n    const [itemsPerPage] = React.useState(10);\r\n    const [totalPages, setTotalPages] = React.useState(1);\r\n    const [imageInfos, setImageInfos] = React.useState([]);\r\n    const [treeData, setTreeData] = useState('');\r\n    const [selected, setSelected] = useState('root');\r\n    const [imageData, setImageData] = useState([]);\r\n    const [alertVisible, setAlertVisible] = useState(false);\r\n    const [allImage, setAllImage] = useState([]);\r\n    const [expanded, setExpanded] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setExpand()\r\n    }, [])\r\n\r\n    const setExpand = () => {\r\n        // localStorage.getItem('selected') ? localStorage.getItem('selected')) :\r\n        const selectedNode = localStorage.getItem('selected');\r\n        let expand = ['root'];\r\n        if (selectedNode) {\r\n            let y, m ,d;\r\n            if (selectedNode.length === 4 && Number(selectedNode) > 1000) {\r\n                y = selectedNode\r\n                expand.push(y)\r\n            } else if (selectedNode.length === 7) {\r\n                y = selectedNode.split(\"-\")[0];\r\n                m = selectedNode.split(\"-\")[1];\r\n                expand.push(y)\r\n                expand.push(y + '-' + m)\r\n            } else if (selectedNode.length === 10) {\r\n                y = selectedNode.split(\"-\")[0];\r\n                m = selectedNode.split(\"-\")[1];\r\n                d = selectedNode.split(\"-\")[2];\r\n                expand.push(y)\r\n                expand.push(y + '-' + m)\r\n                expand.push(y + '-' + m + '-' + d)\r\n            }\r\n        }\r\n        setExpanded(expand)\r\n    }\r\n\r\n    // set tree data\r\n    const setTree = (plain) => {\r\n        const data = {\r\n            id: 'root',\r\n            name: 'Images',\r\n            children: [],\r\n        };\r\n        plain.forEach(value => {\r\n            let [year, month, day] = new Date(value.dateTime).toLocaleDateString('pt-br').split( '/' ).reverse( );\r\n\r\n            let index = data.children.findIndex(item => item.id === String(year))\r\n            if( index < 0) {\r\n                data.children.push({\r\n                    id: year.toString(),\r\n                    name: year.toString(),\r\n                    children: [{\r\n                        id: year + '-' + month,\r\n                        name: month,\r\n                        children: [{\r\n                            id: year + '-' + month + '-' + day,\r\n                            name: day,\r\n                        }]\r\n                    }]\r\n                })\r\n            } else {\r\n                let month_index = data.children[index].children.findIndex(item => String(item.id) === year+'-'+month)\r\n                if (month_index < 0) {\r\n                    data.children[index].children.push({\r\n                        id: year+'-'+month,\r\n                        name: month,\r\n                        children: [{\r\n                            id: year+'-'+month+'-'+day,\r\n                            name: day,\r\n                        }]\r\n                    })\r\n                } else {\r\n                    let day_index = data.children[index].children[month_index].children.findIndex(item => String(item.id) === year+'-'+month+'-'+day)\r\n                    if (day_index < 0) {\r\n                        data.children[index].children[month_index].children.push({\r\n                            id: year+'-'+month+'-'+day,\r\n                            name: day,\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            \r\n        });\r\n        \r\n        setTreeData(data);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        ImageService.getImageFiles()\r\n            .then(async response => {\r\n                if(response.data && response.data.length>0) {\r\n                    setImageData(response.data)\r\n                    setTree(response.data)\r\n                    \r\n                    ///////\r\n                    const nodeId = localStorage.getItem('selected');\r\n                    let data = await response.data.filter(item => {\r\n                        let [year, month, day] = new Date(item.dateTime).toLocaleDateString('pt-br').split( '/' ).reverse( );\r\n        \r\n                        let selectedYear = '';\r\n                        let selectedMonth = '';\r\n                        let selectedDay = '';\r\n        \r\n                        let fileName = item.file_name + item.description;\r\n                        fileName = fileName.trim().toLowerCase();\r\n        \r\n                        if (nodeId === 'root') {\r\n                                return 1;    \r\n                        }\r\n        \r\n                        let selectedDate = '';\r\n                        if (String(nodeId).length === 4) {\r\n                            selectedYear = String(nodeId);\r\n                            if (selectedYear === year) {\r\n                                    return 1;    \r\n                            }\r\n                        }\r\n                    \r\n                        if (String(nodeId).length >= 6) {\r\n                            selectedDate = nodeId.split('-');\r\n                            selectedYear = selectedDate[0];\r\n                            selectedMonth = selectedDate[1];\r\n                            if (selectedYear === year && selectedMonth === month && nodeId.split('-').length === 2) {\r\n                                    return 1;    \r\n                            }\r\n                            if (String(nodeId).length >= 8) {\r\n                                selectedDay = nodeId.split('-')[2];\r\n                                if (selectedYear === year && selectedMonth === month && selectedDay === day) {\r\n                                        return 1;    \r\n                                } else {\r\n                                    return 0;\r\n                                }\r\n                            }\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    \r\n                    setImageInfos(data);\r\n                    \r\n                    const total = Math.ceil(data.length/itemsPerPage);\r\n                    setTotalPages(total);\r\n                }\r\n            })\r\n        ImageService.getAllImageFiles()\r\n            .then(response => {\r\n                if(response.data && response.data.length>0) {\r\n                    setAllImage(response.data)\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const upload = () => {\r\n        setProgress(0);\r\n        UploadService.uploadImage(currentFile, (event) => {\r\n            setProgress(Math.round((100 * event.loaded) / event.total));\r\n        }).then(response => {\r\n            setMessage(response.data.message);\r\n            setAlertVisible(true)\r\n            setTimeout(() => {\r\n                setAlertVisible(false)\r\n            }, 2000)\r\n            return ImageService.getImageFiles();\r\n        }).then(files => {\r\n            if(files.data && files.data.length>0){\r\n                setImageData(files.data);\r\n                setTree(files.data);\r\n                setImageInfos(files.data);\r\n                const total = Math.ceil(files.data.length/itemsPerPage);\r\n                setTotalPages(total);\r\n            }\r\n        }).catch(error => {\r\n            const resMessage =\r\n                (error.response &&\r\n                    error.response.data &&\r\n                    error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n\r\n            setMessage(resMessage);\r\n            setProgress(0);\r\n            // setMessage(\"Could not upload the image!\");\r\n            setCurrentFile(undefined);\r\n        })\r\n    }\r\n\r\n    const selectFile = (event) => {\r\n        if (event.target.files[0]) {\r\n            setCurrentFile(event.target.files[0]);\r\n            setPreviewImage(URL.createObjectURL(event.target.files[0]));\r\n            setProgress(0);\r\n            setMessage(\"\");\r\n        }\r\n    }\r\n\r\n    const handleChangePageNumber = (pagenum)=>{\r\n        setPageNumber(pagenum);\r\n        localStorage.setItem('page', pagenum)\r\n    }\r\n\r\n    const handleGoFirstPage = () =>{\r\n        setPageNumber(1);\r\n    }\r\n\r\n    const handleGoLastPage = () =>{\r\n        setPageNumber(totalPages);\r\n    }\r\n\r\n    const handlePrevPage = () =>{\r\n        if(pageNumber>1){\r\n            const page = pageNumber - 1;\r\n            setPageNumber(page);\r\n        }\r\n    }\r\n\r\n    const handleNextPage = () =>{\r\n        if(pageNumber<totalPages){\r\n            const page = pageNumber + 1;\r\n            setPageNumber(page);\r\n        }\r\n    }\r\n\r\n    const handleChangeKeyword = (key) => {\r\n        //handleNodeSelect(null, selected ? selected : 'root', );\r\n        const keyword = key.trim().toLowerCase();\r\n        const nodeId = selected;\r\n        let data = allImage.filter(item => {\r\n            let [year, month, day] = new Date(item.dateTime).toLocaleDateString('pt-br').split( '/' ).reverse( );\r\n\r\n            let selectedYear = '';\r\n            let selectedMonth = '';\r\n            let selectedDay = '';\r\n\r\n            let fileName = item.file_name + item.description;\r\n            fileName = fileName.trim().toLowerCase();\r\n\r\n            if (nodeId === 'root') {\r\n                if (keyword === \"\") {\r\n                    return 1;    \r\n                } else {\r\n                    if (fileName.includes(keyword)) {\r\n                        return 1;\r\n                    }\r\n                }\r\n            }\r\n\r\n            let selectedDate = '';\r\n            if (String(nodeId).length === 4) {\r\n                selectedYear = String(nodeId);\r\n                if (selectedYear === year) {\r\n                    if (keyword === \"\") {\r\n                        return 1;    \r\n                    } else {\r\n                        if (fileName.includes(keyword)) {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        \r\n            if (String(nodeId).length >= 6) {\r\n                selectedDate = nodeId.split('-');\r\n                selectedYear = selectedDate[0];\r\n                selectedMonth = selectedDate[1];\r\n                if (selectedYear === year && selectedMonth === month && nodeId.split('-').length === 2) {\r\n                    if (keyword === \"\") {\r\n                        return 1;    \r\n                    } else {\r\n                        if (fileName.includes(keyword)) {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n                if (String(nodeId).length >= 8) {\r\n                    selectedDay = nodeId.split('-')[2];\r\n                    if (selectedYear === year && selectedMonth === month && selectedDay === day) {\r\n                        if (keyword === \"\") {\r\n                            return 1;    \r\n                        } else {\r\n                            if (fileName.includes(keyword)) {\r\n                                return 1;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        return 0;\r\n                    }\r\n                }\r\n            }\r\n            return 0;\r\n        });\r\n        \r\n        setImageInfos(data);\r\n    \r\n        const total = Math.ceil(data.length / itemsPerPage);\r\n        setTotalPages(total);\r\n\r\n        localStorage.removeItem(\"page\");\r\n        setPageNumber(1);\r\n    }\r\n\r\n    const handleNodeSelect = (event, nodeId, keyword) => {\r\n        if (keyword === \"\") {\r\n            document.getElementById('input-with-icon-textfield').value = '';\r\n        }\r\n        {\r\n            setSelected(nodeId);        // e.g. 2020-3-5\r\n            localStorage.setItem(\"selected\", nodeId);\r\n            setExpand();\r\n            let data = imageData.filter(item => {\r\n                let [year, month, day] = new Date(item.dateTime).toLocaleDateString('pt-br').split( '/' ).reverse( );\r\n\r\n                let selectedYear = '';\r\n                let selectedMonth = '';\r\n                let selectedDay = '';\r\n\r\n                let fileName = item.file_name + item.description;\r\n                fileName = fileName.trim().toLowerCase();\r\n\r\n                if (nodeId === 'root') {\r\n                    if (keyword === \"\") {\r\n                        return 1;    \r\n                    } else {\r\n                        if (fileName.includes(keyword)) {\r\n                            return 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                let selectedDate = '';\r\n                if (String(nodeId).length === 4) {\r\n                    selectedYear = String(nodeId);\r\n                    if (selectedYear === year) {\r\n                        if (keyword === \"\") {\r\n                            return 1;    \r\n                        } else {\r\n                            if (fileName.includes(keyword)) {\r\n                                return 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            \r\n                if (String(nodeId).length >= 6) {\r\n                    selectedDate = nodeId.split('-');\r\n                    selectedYear = selectedDate[0];\r\n                    selectedMonth = selectedDate[1];\r\n                    if (selectedYear === year && selectedMonth === month && nodeId.split('-').length === 2) {\r\n                        if (keyword === \"\") {\r\n                            return 1;    \r\n                        } else {\r\n                            if (fileName.includes(keyword)) {\r\n                                return 1;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (String(nodeId).length >= 8) {\r\n                        selectedDay = nodeId.split('-')[2];\r\n                        if (selectedYear === year && selectedMonth === month && selectedDay === day) {\r\n                            if (keyword === \"\") {\r\n                                return 1;    \r\n                            } else {\r\n                                if (fileName.includes(keyword)) {\r\n                                    return 1;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return 0;\r\n                        }\r\n                    }\r\n                }\r\n                return 0;\r\n            });\r\n            \r\n            setImageInfos(data);\r\n        \r\n            const total = Math.ceil(data.length / itemsPerPage);\r\n            setTotalPages(total);\r\n        }\r\n\r\n        localStorage.removeItem(\"page\");\r\n        setPageNumber(1);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    const renderTree = (nodes) => {\r\n        return (\r\n        <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\r\n            {Array.isArray(nodes.children) ? nodes.children.map((node) => renderTree(node)) : null}\r\n        </TreeItem>\r\n    )}\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"mb-3\">\r\n                <Col md={4}>\r\n                    <label className=\"btn btn-default p-0\">\r\n                        <input type=\"file\" accept=\"image/*\" onChange={selectFile} />\r\n                    </label>\r\n                    <Button size=\"sm\" style={{ width: \"100px\" }} disabled={!currentFile} onClick={upload}>\r\n                        Upload\r\n                    </Button>\r\n                </Col>\r\n                <Col md={8}>\r\n                    {previewImage && (\r\n                        <div className=\"text-center\">\r\n                            <Image className=\"preview\" src={previewImage} alt=\"\" />\r\n                        </div>\r\n                    )}\r\n                    {currentFile && (\r\n                        < ProgressBar className=\"my-3\" min={0} max={100} now={progress} label={`${progress}%`} striped />\r\n                    )}\r\n                    \r\n                    {message && (\r\n                        <Alert variant=\"success\" className=\"mt-3 upload_alert\" show={alertVisible}>\r\n                            <Alert.Heading>Upload Completed!</Alert.Heading>\r\n                            {message}\r\n                        </Alert>\r\n                    )}\r\n                </Col>\r\n            </Row>\r\n            \r\n            <Row>\r\n                <Col md={3} className=\"card\">\r\n                    <TreeView\r\n                        className={classes.root}\r\n                        defaultCollapseIcon={<ExpandMoreIcon />}\r\n                        //defaultExpanded={['root']}\r\n                        defaultExpandIcon={<ChevronRightIcon />}\r\n                        expanded={expanded}\r\n                        onNodeSelect={(even, nodeIds) => handleNodeSelect(even, nodeIds, \"\")}\r\n                    >\r\n                        {treeData && renderTree(treeData)}\r\n                    </TreeView>\r\n                </Col>\r\n                <Col md={9}>\r\n                    {imageInfos\r\n                    && <ImageList \r\n                        image_list={imageInfos}\r\n                        totalPages={totalPages}\r\n                        itemsPerPage={itemsPerPage}\r\n                        currentPage={pageNumber}\r\n                        onChangeKeyword={handleChangeKeyword}\r\n                        onChangePageNumber={handleChangePageNumber}\r\n                        onGoFirstPage={handleGoFirstPage}\r\n                        onGoLastPage={handleGoLastPage}\r\n                        onNextPage={handleNextPage}\r\n                        onPrevPage={handlePrevPage}\r\n                        />\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nconst ImageList = (props) => {\r\n    const classes = useStyles();\r\n\r\n    const getFileName = (filename) =>{\r\n        let fname = filename.split(\"_\");\r\n        fname.shift();\r\n        return fname.join(\"_\");\r\n    }\r\n    const renderItem = (data) => (\r\n        <ListGroup.Item key={data.image_id}>\r\n            <Media>\r\n                <Image thumbnail src={data.thumb_url} className=\"mr-3\" />\r\n                <Media.Body>\r\n                    <h5><span>{`${data.id_counter}. File Name : `}</span><span>{getFileName(data.file_name)}</span></h5>\r\n                    <p style={{marginBottom: \"0px\"}}><span>Id : </span><span>{data.image_id}</span></p>\r\n                    <p style={{marginBottom: \"0px\"}}><small><span>Created Time : </span><span>{data.dateTime}</span></small></p>\r\n                    <p><small><span>Description : </span><span>{data.description || \"No description\"}</span></small></p>\r\n                    <Link to={`/edit_image/${data.image_id}`}><Button variant=\"success\" size=\"sm\" className=\"mr-3\">Edit Image</Button></Link>\r\n                    <Button variant=\"primary\" size=\"sm\" href={data.url}>Download</Button>\r\n                </Media.Body>\r\n            </Media>\r\n        </ListGroup.Item>\r\n    );\r\n\r\n    const showPagenationItem = () => {\r\n\r\n        return (\r\n            <Pagination\r\n                color=\"primary\"\r\n                className=\"mt-3\"\r\n                shape=\"rounded\"\r\n                count={props.totalPages}\r\n                page={props.currentPage}\r\n                onChange={(event, val)=>props.onChangePageNumber(val)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const doSomethingWith = (e) => {\r\n        if (e.key === 'Enter' || e.keyCode === 13) {\r\n            props.onChangeKeyword(e.target.value);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card\">\r\n                <TextField\r\n                    className={classes.margin}\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder=\"Search\"\r\n                    onKeyDown={doSomethingWith}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                        <SearchIcon />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                />\r\n                <h3 className=\"card-header\">List of Images</h3>\r\n                <ListGroup variant=\"flush\">\r\n                    {props.image_list\r\n                        && props.image_list.map((img, index) => {\r\n                            if((props.currentPage-1)*props.itemsPerPage <=index && (props.currentPage)*props.itemsPerPage > index )\r\n                            return renderItem(img)\r\n                        })}\r\n                </ListGroup>\r\n                {showPagenationItem()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ImageUpload","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Image\\EditImage.js",["169","170","171"],"import React, { useEffect, useState } from 'react';\r\nimport { Stage, Layer, Image } from 'react-konva';\r\nimport {\r\n    Button,\r\n    ListGroup,\r\n    OverlayTrigger,\r\n    Tooltip,\r\n} from 'react-bootstrap';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport ImageService from '../../../services/image.service';\r\nimport Auth from \"../../../services/auth.service\";\r\nimport GlobalData from '../../../tools/GlobalData';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Form from 'react-bootstrap/Form'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst back_end_server = GlobalData.back_end_server_ip + \":\" + GlobalData.back_end_server_port;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: 110,\r\n        flexGrow: 1,\r\n        maxWidth: 400,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MyVerticallyCenteredModal = (props) => {\r\n    const onSaveClick = (event) => {\r\n        props.onAddDescription(props.description)\r\n        props.onHide()\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Input Description\r\n            </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h5>📝 Please enter your description to the selected image.</h5>\r\n                <Form.Control as=\"textarea\" rows={3} name=\"description\" value={props.description} onChange={props.handleInputChange} />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={props.onHide}>Close</Button>\r\n                <Button variant=\"primary\" onClick={onSaveClick}>Save changes</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst EditImage = (props) => {\r\n    const [imageInfos, setImageInfos] = React.useState(undefined);\r\n    const [imageId, setImageId] = React.useState('');\r\n    const [imageSrc, setImageSrc] = React.useState('');\r\n    const [imageDescription, setImageDescription] = useState('');\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [currentUser] = React.useState(Auth.getCurrentUser());\r\n    const [imageHistory, setImageHistory] = React.useState(undefined);\r\n    const [orginImageHistory, setOrginImageHistory] = useState(undefined);\r\n    const [lastId, setLastId] = React.useState('');\r\n    const [isLoading, setIsLoading] = React.useState(true);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const [itemsPerPage] = useState(5);\r\n    const [totalPage, setTotalPage] = useState(1);\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [isRotate, setIsRotate] = useState(undefined)\r\n    const [isEditDescription, setIsEditDescription] = useState(undefined)\r\n\r\n    React.useEffect(() => {\r\n        ImageService.getImageFiles()\r\n            .then(files => {\r\n                setImageInfos(files.data);\r\n                const iid = props.match.params.image_id;\r\n                return ImageService.getImageHistory(iid);\r\n            }).then(response => {\r\n                setOrginImageHistory(response.data);\r\n                setImageHistory(response.data);\r\n                setTotalPage(Math.ceil(response.data.length / itemsPerPage));\r\n            }).catch((err) => {\r\n                const resMessage = (\r\n                    err.response &&\r\n                    err.response.data &&\r\n                    err.response.data.message\r\n                ) || err.toString();\r\n                setIsLoading(false);\r\n                setErrorMessage(resMessage);\r\n            });\r\n    }, [props]);\r\n\r\n    React.useEffect(() => {\r\n        if (imageHistory && imageHistory.length > 0) {\r\n            const first_id = imageHistory[0].image_id;\r\n            const last_id = imageHistory[imageHistory.length - 1].image_id;\r\n            setLastId(last_id);\r\n\r\n            if (isRotate && !isEditDescription) {\r\n                setImageId(last_id)\r\n                setTotalPage(Math.ceil(imageHistory.length / itemsPerPage));\r\n                setPageNumber(totalPage)\r\n                setIsRotate(false)\r\n            } else if (!isRotate && isEditDescription) {\r\n                setIsEditDescription(false)\r\n            } else {\r\n                setImageId(first_id)\r\n            }\r\n\r\n            setIsLoading(false);\r\n        }\r\n    }, [imageHistory]);\r\n\r\n    React.useEffect(() => {\r\n        setImageSrc(ImageService.getImage(imageId));\r\n    }, [imageId]);\r\n\r\n    const handleRotateImage = () => {\r\n        const payload = {\r\n            imageId: imageId,\r\n            degree: 90,\r\n            clock: true,\r\n        }\r\n        setIsLoading(true);\r\n        ImageService.rotateImage(payload).then(response => {\r\n            ImageService.getImageHistory(response.data.imageId).then(response => {\r\n                setImageHistory(response.data);\r\n                setTotalPage(Math.ceil(response.data.length / itemsPerPage));\r\n            }).catch(err => {\r\n\r\n            })\r\n            setErrorMessage('');\r\n        }).catch((err) => {\r\n            const resMessage = (\r\n                err.response &&\r\n                err.response.data &&\r\n                err.response.data.message\r\n            ) || err.toString();\r\n            setIsLoading(false);\r\n            setErrorMessage(resMessage);\r\n        });\r\n        setIsRotate(true);\r\n    }\r\n\r\n    const handleEditImage = () => {\r\n        setModalShow(true);\r\n        setImageDescription(imageHistory.find(item => item.image_id === imageId).description)\r\n        setIsEditDescription(true)\r\n    }\r\n\r\n    const handleAddDescription = (desc) => {\r\n        const data = {\r\n            imageId: imageId,\r\n            imageDescription: desc\r\n        }\r\n        ImageService.addImageDescription(data).then(response => {\r\n            const index = imageHistory.findIndex(item => item.image_id === imageId)\r\n            const history = [...imageHistory];\r\n            history[index].description = desc;\r\n            setImageHistory(history);\r\n            setErrorMessage('');\r\n        }).catch((err) => {\r\n            const resMessage = (\r\n                err.response &&\r\n                err.response.data &&\r\n                err.response.data.message\r\n            ) || err.toString();\r\n            setIsLoading(false);\r\n            setErrorMessage(resMessage);\r\n        })\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setImageDescription(e.target.value);\r\n    }\r\n\r\n    const onClickHistory = (id) => {\r\n        setImageId(id);\r\n    }\r\n\r\n    const removeImage = (image_id) => {\r\n        let arr = [...imageHistory];\r\n        if (arr.length === 1) {\r\n            const confirm = window.confirm(\"Are you sure remove the last image?\");\r\n            if (confirm) {\r\n                ImageService.removeImage(image_id).then((response) => {\r\n                    props.history.push(\"/upload_image\");\r\n                }).catch((err) => {\r\n                    const resMessage = (\r\n                        err.response &&\r\n                        err.response.data &&\r\n                        err.response.data.message\r\n                    ) || err.toString();\r\n                    setIsLoading(false);\r\n                    setErrorMessage(resMessage);\r\n                });\r\n            }\r\n        } else {\r\n            ImageService.removeImage(image_id).then((response) => {\r\n                arr = arr.filter(item => item.image_id !== image_id)\r\n                setImageHistory(arr);\r\n            }).catch((err) => {\r\n                const resMessage = (\r\n                    err.response &&\r\n                    err.response.data &&\r\n                    err.response.data.message\r\n                ) || err.toString();\r\n                setIsLoading(false);\r\n                setErrorMessage(resMessage);\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleNextImage = () => {\r\n        const iid = props.match.params.image_id;\r\n        var nextImageId = null;\r\n        if (imageInfos && imageInfos.length > 0) {\r\n            for (let i = 0; i < imageInfos.length - 1; i++) {\r\n                if (imageInfos[i].image_id === iid) {\r\n                    nextImageId = imageInfos[i + 1].image_id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (nextImageId) {\r\n            props.history.push(`/edit_image/${nextImageId}`);\r\n        }\r\n    }\r\n\r\n    const handlePrevImage = () => {\r\n        const iid = props.match.params.image_id;\r\n        var prevImageId = null;\r\n        if (imageInfos && imageInfos.length > 0) {\r\n            for (let i = 1; i < imageInfos.length; i++) {\r\n                if (imageInfos[i].image_id === iid) {\r\n                    prevImageId = imageInfos[i - 1].image_id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (prevImageId) {\r\n            props.history.push(`/edit_image/${prevImageId}`);\r\n        }\r\n    }\r\n\r\n    const handleChangePageNumber = (pagenum) => {\r\n        setPageNumber(pagenum);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (imageHistory) {\r\n            const total = Math.ceil(imageHistory.length / itemsPerPage);\r\n            setTotalPage(total);\r\n            isRotate && setPageNumber(total);\r\n        }\r\n    })\r\n\r\n    // search\r\n    const doSomethingWith = (e) => {\r\n        if (e.key === 'Enter' || e.keyCode === 13) {\r\n            const keyword = e.target.value;\r\n\r\n            const data = orginImageHistory.filter(item => {\r\n                let fileName = item.file_name + item.description;\r\n                fileName = fileName.trim().toLowerCase();\r\n\r\n                if (fileName.includes(keyword)) {\r\n                    return 1;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n\r\n            setImageHistory(data);\r\n\r\n            const total = Math.ceil(data.length / itemsPerPage);\r\n            setTotalPage(total);\r\n            setPageNumber(1);\r\n        }\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            {errorMessage && (\r\n                <div>\r\n                    {errorMessage}\r\n                </div>\r\n            )}\r\n            {/* <Link to=> */}\r\n                <Button className=\"btn-circle\" href='/upload_image'>\r\n                    Going Back\r\n                </Button>\r\n            {/* </Link> */}\r\n            <div className=\"justify-content-center\">\r\n                <div className=\"float-lg-left float-md-left mr-3 url-image\" style={{ width: \"500px\", height: \"400px\" }}>\r\n                    <Stage width={500} height={400}>\r\n                        <Layer>\r\n                            <URLImage src={imageSrc} width={500} height={400} />\r\n                        </Layer>\r\n                    </Stage>\r\n                    <h4 className=\"ml-1 my-2\">Image Operations</h4>\r\n                    <Button variant=\"success\" className=\"my-1 mr-1\" onClick={handleRotateImage} disabled={lastId !== imageId || isLoading}>\r\n                        {isLoading && (\r\n                            <span className=\"spinner-border spinner-border-sm\"></span>\r\n                        )}\r\n                        <span>Rotate Image</span>\r\n                    </Button>\r\n                    <Button variant=\"success\" className=\"my-1 mr-1\" onClick={handleEditImage}>\r\n                        Edit Description\r\n                    </Button>\r\n                    <Button variant=\"primary\" className=\"my-3 mr-3\"\r\n                        href={`${back_end_server}/api/image/getImageFile/${imageId}?user_id=${currentUser.user_id}&user_key=${currentUser.access_key}&type=download`}>\r\n                        Download\r\n                    </Button>\r\n                    <Button variant=\"outline-info\" className=\"my-1 mr-1\" onClick={() => { handlePrevImage() }}>{'<<'}</Button>\r\n                    <Button variant=\"outline-info\" className=\"m1-3 mr-1\" onClick={() => { handleNextImage() }}>{'>>'}</Button>\r\n                </div>\r\n                <div className=\"float-lg-left float-md-left \" style={{ width: \"500px\" }}>\r\n                    <TextField\r\n                        className={classes.margin}\r\n                        placeholder=\"Search\"\r\n                        onKeyDown={doSomethingWith}\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon />\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <ImageHistory\r\n                        imageHistory={imageHistory}\r\n                        activeImageId={imageId}\r\n                        onRemove={removeImage}\r\n                        totalPage={totalPage}\r\n                        currentPage={pageNumber}\r\n                        itemsPerPage={itemsPerPage}\r\n                        itemClick={onClickHistory}\r\n                        onChangePageNumber={handleChangePageNumber}\r\n                    />\r\n                    <Pagination color=\"primary\" shape=\"rounded\" className=\"m-3\" count={totalPage} page={pageNumber} onChange={(event, val) => setPageNumber(val)} />\r\n                </div>\r\n                <MyVerticallyCenteredModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                    description={imageDescription}\r\n                    onAddDescription={handleAddDescription}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst ImageHistory = ({ imageHistory, activeImageId, onRemove, itemClick, currentPage, itemsPerPage }) => {\r\n    const getIsActive = (image_id) =>\r\n    (image_id === activeImageId ?\r\n        \"dark\" :\r\n        \"\"\r\n    );\r\n\r\n    const getFileName = (filename) => {\r\n        let fname = filename.split(\"_\");\r\n        fname.shift();\r\n        return fname.join(\"_\");\r\n    }\r\n\r\n    const renderItem = (ih) => (\r\n        <ListGroup.Item key={ih.image_id} variant={getIsActive(ih.image_id)} className=\"cursor-pointer\" onClick={() => itemClick(ih.image_id)}>\r\n            <div>\r\n                <h6>File Name : <span>{getFileName(ih.file_name)}</span></h6>\r\n                <OverlayTrigger\r\n                    key={\"right\"}\r\n                    placement={\"right\"}\r\n                    overlay={\r\n                        <Tooltip id={`remove`}>Remove image</Tooltip>\r\n                    }\r\n                >\r\n                    <button type=\"button\" className=\"close\" onClick={() => { onRemove(ih.image_id) }}>\r\n                        <span aria-hidden=\"true\" style={{ color: \"red\" }}>×</span>\r\n                        <span className=\"sr-only\">Close</span>\r\n                    </button>\r\n                </OverlayTrigger>\r\n            </div>\r\n            <p style={{ marginBottom: \"0px\" }}><small><span style={{ fontWeight: 500 }}>Image Id: </span><span>{ih.image_id}</span></small></p>\r\n            <p style={{ marginBottom: \"0px\" }}><small><span style={{ fontWeight: 500 }}>Description: </span><span>{ih.description || \"No description\"}</span></small></p>\r\n            <p style={{ marginBottom: \"0px\" }}><span style={{ fontWeight: 500 }}>Source Image: </span><span>{ih.source_image_id || \"Main image\"}</span></p>\r\n        </ListGroup.Item>\r\n    );\r\n\r\n    return (\r\n        <ListGroup className=\"list-group\">\r\n            {imageHistory && imageHistory.length > 0 && (\r\n                imageHistory.map((ih, index) => {\r\n                    if ((currentPage - 1) * itemsPerPage <= index && (currentPage) * itemsPerPage > index)\r\n                        return renderItem(ih)\r\n                    else {\r\n                        return null\r\n                    }\r\n                })\r\n            )}\r\n        </ListGroup>\r\n    )\r\n}\r\n\r\nclass URLImage extends React.Component {\r\n    state = {\r\n        image: null,\r\n        width: 0,\r\n        height: 0,\r\n    };\r\n    componentDidMount() {\r\n        this.loadImage();\r\n    }\r\n    componentDidUpdate(oldProps) {\r\n        if (oldProps.src !== this.props.src) {\r\n            this.loadImage();\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        this.image.removeEventListener('load', this.handleLoad);\r\n    }\r\n    loadImage() {\r\n        // save to \"this\" to remove \"load\" handler on unmount\r\n        this.image = new window.Image();\r\n        this.image.src = this.props.src;\r\n        this.image.addEventListener('load', this.handleLoad);\r\n    }\r\n    handleLoad = () => {\r\n        // after setState react-konva will update canvas and redraw the layer\r\n        // because \"image\" property is changed\r\n        this.setState({\r\n            image: this.image\r\n        });\r\n\r\n        const ratio = Math.min(Math.min(this.props.width, this.image.width) / this.image.width, Math.min(this.props.height, this.image.height) / this.image.height);\r\n\r\n        this.setState({\r\n            width: ratio * this.image.width,\r\n            height: ratio * this.image.height\r\n        })\r\n    };\r\n    render() {\r\n        return (\r\n            <Image\r\n                x={this.props.x}\r\n                y={this.props.y}\r\n                width={this.state.width}\r\n                height={this.state.height}\r\n                image={this.state.image}\r\n                ref={node => {\r\n                    this.imageNode = node;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditImage;\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\Playlist.js",["172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\UploadVideo.js",["198","199","200","201","202","203","204","205","206","207","208","209","210"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\VideoList.js",["211","212","213","214","215","216","217","218","219","220","221","222"],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\user.service.js",["223"],"import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nimport GlobalData from '../tools/GlobalData';\r\n\r\nconst API_URL = GlobalData.back_end_server_ip + ':' + GlobalData.back_end_server_port + '/api/user/';\r\n//const API_URL = `http://1-58.69.222.102:3030/api/user/`;\r\n\r\nconst getPublicContent=()=>{\r\n    return axios.get(`${API_URL}all`);\r\n}\r\nconst getUserBoard=()=>{\r\n    return axios.get(`${API_URL}user`, {headers: authHeader()});\r\n}\r\nconst getModeratorBoard=()=>{\r\n    return axios.get(`${API_URL}mod`, {headers:authHeader()});\r\n}\r\nconst getAdminBoard=()=>{\r\n    return axios.get(`${API_URL}admin`, {headers:authHeader()});\r\n}\r\nconst addTokens=(obj)=>{\r\n    return axios.get(`${API_URL}add_tokens?user_id=${obj.user_id}&nr_tokens=${obj.nr_tokens}&admin_key=${obj.admin_key}`);\r\n}\r\nexport default {\r\n    getPublicContent,\r\n    getUserBoard,\r\n    getModeratorBoard,\r\n    getAdminBoard,\r\n    addTokens,\r\n};\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\auth-header.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\video.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\MutipleSelect.js",["224","225","226","227","228"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { StepLabel } from '@material-ui/core';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport VideoService from '../../../services/video.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n    float: 'right'\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n  const [myPlayLists, setMyPlayLists] = useState(props.a);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (e) => {\r\n    setMyPlayLists(e.target.value)\r\n\r\n    // .then(response => {\r\n    //     setMessage(response.data.message);\r\n    //     setAlertVisible(true)\r\n    //     setTimeout(() => {\r\n    //         setAlertVisible(false)\r\n    //     }, 2000)\r\n\r\n    //     setProgressVisible(false);\r\n\r\n    //     if (response.data.message === 'success') {\r\n    //         getAllVideos();\r\n    //         setVideoUrl('');\r\n    //     }\r\n    // })\r\n\r\n  }\r\n\r\n  const savePlaylist = () => {\r\n    VideoService.addPlaylistIds(props.videoId, myPlayLists)\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={myPlayLists}\r\n          onChange={handleChange}\r\n          onClose={savePlaylist}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {props.names.map((name) => (\r\n            <MenuItem key={name.id} value={name.id}>\r\n              {name.playlist_title}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\image.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\file-upload.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\playlist.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Video\\MutipleSelect.js",["229","230","231","232"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { StepLabel } from '@material-ui/core';\r\n\r\nimport VideoService from '../../../services/video.service';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(0),\r\n    minWidth: 300,\r\n    maxWidth: 300,\r\n    float: 'right'\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n  const [myPlayLists, setMyPlayLists] = useState(props.a);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleChange = (e) => {\r\n    setMyPlayLists(e.target.value)\r\n\r\n    // .then(response => {\r\n    //     setMessage(response.data.message);\r\n    //     setAlertVisible(true)\r\n    //     setTimeout(() => {\r\n    //         setAlertVisible(false)\r\n    //     }, 2000)\r\n\r\n    //     setProgressVisible(false);\r\n\r\n    //     if (response.data.message === 'success') {\r\n    //         getAllVideos();\r\n    //         setVideoUrl('');\r\n    //     }\r\n    // })\r\n\r\n  }\r\n\r\n  const savePlaylist = () => {\r\n    VideoService.addPlaylistIds(props.videoId, myPlayLists)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <FormControl className={classes.formControl}>\r\n        <Select\r\n          labelId=\"demo-mutiple-name-label\"\r\n          id=\"demo-mutiple-name\"\r\n          multiple\r\n          value={myPlayLists}\r\n          onChange={handleChange}\r\n          onClose={savePlaylist}\r\n          input={<Input />}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {props.names.map((name) => (\r\n            <MenuItem key={name.id} value={name.id}>\r\n              {name.playlist_title}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\tools\\GlobalData.js",["233"],"export default {\r\n  back_end_server_ip: 'http://localhost',\r\n  back_end_server_port: '3030'\r\n};\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\execute.service.js",["234"],"import axios from 'axios';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nimport GlobalData from '../tools/GlobalData';\r\n\r\nconst API_URL = GlobalData.back_end_server_ip + ':' + GlobalData.back_end_server_port + '/api/execute_service?';\r\n//const API_URL = `http://1-58.69.222.102:3030/api/execute_service?`;\r\n//const API_URL = `http://local--host:3030/api/execute_service?`;\r\n\r\nconst getWeather = (cityName)=>{\r\n    const user=AuthService.getCurrentUser();\r\n    return axios.get(`${API_URL}server=get_weather&user_id=${user.user_id}&user_key=${user.access_key}&city=${cityName}`);\r\n}\r\n\r\nconst getTokenHistory=()=>{\r\n    const user=AuthService.getCurrentUser();\r\n    return axios.get(`${API_URL}server=get_tokenHistory&user_id=${user.user_id}`);\r\n}\r\n\r\nexport default {\r\n    getWeather,\r\n    getTokenHistory,\r\n};\r\n","D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\services\\ppt.service.js",[],"D:\\3-3\\XeniApp\\XeniApp\\frontend\\src\\components\\Service\\Playlist\\MyVerticallyCenteredModal.js",["235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":134,"column":1,"nodeType":"242","endLine":146,"endColumn":3},{"ruleId":"243","severity":1,"message":"244","line":153,"column":36,"nodeType":"245","messageId":"246","endLine":153,"endColumn":44},{"ruleId":"247","severity":1,"message":"248","line":198,"column":8,"nodeType":"249","endLine":198,"endColumn":10,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":567,"column":62,"nodeType":"253","messageId":"254","endLine":567,"endColumn":64},{"ruleId":"247","severity":1,"message":"248","line":101,"column":8,"nodeType":"249","endLine":101,"endColumn":15,"suggestions":"255"},{"ruleId":"247","severity":1,"message":"256","line":122,"column":8,"nodeType":"249","endLine":122,"endColumn":22,"suggestions":"257"},{"ruleId":"247","severity":1,"message":"258","line":260,"column":5,"nodeType":"245","endLine":260,"endColumn":14,"suggestions":"259"},{"ruleId":"243","severity":1,"message":"260","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"243","severity":1,"message":"261","line":11,"column":8,"nodeType":"245","messageId":"246","endLine":11,"endColumn":19},{"ruleId":"240","severity":1,"message":"262","line":125,"column":1,"nodeType":"242","endLine":507,"endColumn":2},{"ruleId":"243","severity":1,"message":"263","line":130,"column":12,"nodeType":"245","messageId":"246","endLine":130,"endColumn":20},{"ruleId":"243","severity":1,"message":"264","line":130,"column":22,"nodeType":"245","messageId":"246","endLine":130,"endColumn":33},{"ruleId":"243","severity":1,"message":"265","line":131,"column":22,"nodeType":"245","messageId":"246","endLine":131,"endColumn":33},{"ruleId":"243","severity":1,"message":"266","line":132,"column":26,"nodeType":"245","messageId":"246","endLine":132,"endColumn":41},{"ruleId":"243","severity":1,"message":"267","line":133,"column":12,"nodeType":"245","messageId":"246","endLine":133,"endColumn":20},{"ruleId":"243","severity":1,"message":"268","line":133,"column":22,"nodeType":"245","messageId":"246","endLine":133,"endColumn":33},{"ruleId":"243","severity":1,"message":"269","line":134,"column":29,"nodeType":"245","messageId":"246","endLine":134,"endColumn":47},{"ruleId":"243","severity":1,"message":"270","line":150,"column":12,"nodeType":"245","messageId":"246","endLine":150,"endColumn":22},{"ruleId":"243","severity":1,"message":"271","line":150,"column":24,"nodeType":"245","messageId":"246","endLine":150,"endColumn":37},{"ruleId":"247","severity":1,"message":"272","line":155,"column":8,"nodeType":"249","endLine":155,"endColumn":10,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"274","line":189,"column":15,"nodeType":"245","messageId":"246","endLine":189,"endColumn":21},{"ruleId":"275","severity":1,"message":"276","line":201,"column":21,"nodeType":"277","messageId":"278","endLine":201,"endColumn":23},{"ruleId":"275","severity":1,"message":"279","line":254,"column":28,"nodeType":"277","messageId":"278","endLine":254,"endColumn":30},{"ruleId":"275","severity":1,"message":"276","line":255,"column":81,"nodeType":"277","messageId":"278","endLine":255,"endColumn":83},{"ruleId":"275","severity":1,"message":"276","line":328,"column":59,"nodeType":"277","messageId":"278","endLine":328,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":341,"column":59,"nodeType":"277","messageId":"278","endLine":341,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":356,"column":59,"nodeType":"277","messageId":"278","endLine":356,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":362,"column":52,"nodeType":"277","messageId":"278","endLine":362,"endColumn":54},{"ruleId":"275","severity":1,"message":"276","line":368,"column":51,"nodeType":"277","messageId":"278","endLine":368,"endColumn":53},{"ruleId":"275","severity":1,"message":"276","line":369,"column":57,"nodeType":"277","messageId":"278","endLine":369,"endColumn":59},{"ruleId":"243","severity":1,"message":"280","line":378,"column":75,"nodeType":"245","messageId":"246","endLine":378,"endColumn":85},{"ruleId":"275","severity":1,"message":"276","line":442,"column":73,"nodeType":"277","messageId":"278","endLine":442,"endColumn":75},{"ruleId":"275","severity":1,"message":"276","line":447,"column":67,"nodeType":"277","messageId":"278","endLine":447,"endColumn":69},{"ruleId":"243","severity":1,"message":"281","line":22,"column":5,"nodeType":"245","messageId":"246","endLine":22,"endColumn":9},{"ruleId":"243","severity":1,"message":"282","line":27,"column":10,"nodeType":"245","messageId":"246","endLine":27,"endColumn":18},{"ruleId":"247","severity":1,"message":"283","line":159,"column":8,"nodeType":"249","endLine":159,"endColumn":10,"suggestions":"284"},{"ruleId":"243","severity":1,"message":"244","line":195,"column":36,"nodeType":"245","messageId":"246","endLine":195,"endColumn":44},{"ruleId":"275","severity":1,"message":"276","line":464,"column":59,"nodeType":"277","messageId":"278","endLine":464,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":477,"column":59,"nodeType":"277","messageId":"278","endLine":477,"endColumn":61},{"ruleId":"243","severity":1,"message":"285","line":489,"column":11,"nodeType":"245","messageId":"246","endLine":489,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":497,"column":59,"nodeType":"277","messageId":"278","endLine":497,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":503,"column":52,"nodeType":"277","messageId":"278","endLine":503,"endColumn":54},{"ruleId":"275","severity":1,"message":"276","line":509,"column":51,"nodeType":"277","messageId":"278","endLine":509,"endColumn":53},{"ruleId":"275","severity":1,"message":"276","line":510,"column":57,"nodeType":"277","messageId":"278","endLine":510,"endColumn":59},{"ruleId":"275","severity":1,"message":"279","line":518,"column":28,"nodeType":"277","messageId":"278","endLine":518,"endColumn":30},{"ruleId":"275","severity":1,"message":"276","line":519,"column":81,"nodeType":"277","messageId":"278","endLine":519,"endColumn":83},{"ruleId":"240","severity":1,"message":"262","line":42,"column":1,"nodeType":"242","endLine":208,"endColumn":2},{"ruleId":"247","severity":1,"message":"286","line":65,"column":8,"nodeType":"249","endLine":65,"endColumn":15,"suggestions":"287"},{"ruleId":"275","severity":1,"message":"276","line":71,"column":35,"nodeType":"277","messageId":"278","endLine":71,"endColumn":37},{"ruleId":"275","severity":1,"message":"276","line":71,"column":78,"nodeType":"277","messageId":"278","endLine":71,"endColumn":80},{"ruleId":"251","severity":1,"message":"288","line":92,"column":42,"nodeType":"253","messageId":"254","endLine":92,"endColumn":44},{"ruleId":"275","severity":1,"message":"276","line":130,"column":59,"nodeType":"277","messageId":"278","endLine":130,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":143,"column":59,"nodeType":"277","messageId":"278","endLine":143,"endColumn":61},{"ruleId":"243","severity":1,"message":"285","line":155,"column":11,"nodeType":"245","messageId":"246","endLine":155,"endColumn":15},{"ruleId":"275","severity":1,"message":"276","line":163,"column":59,"nodeType":"277","messageId":"278","endLine":163,"endColumn":61},{"ruleId":"275","severity":1,"message":"276","line":169,"column":52,"nodeType":"277","messageId":"278","endLine":169,"endColumn":54},{"ruleId":"275","severity":1,"message":"276","line":175,"column":51,"nodeType":"277","messageId":"278","endLine":175,"endColumn":53},{"ruleId":"275","severity":1,"message":"276","line":176,"column":57,"nodeType":"277","messageId":"278","endLine":176,"endColumn":59},{"ruleId":"240","severity":1,"message":"241","line":24,"column":1,"nodeType":"242","endLine":30,"endColumn":3},{"ruleId":"243","severity":1,"message":"260","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"289","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"290","line":8,"column":8,"nodeType":"245","messageId":"246","endLine":8,"endColumn":18},{"ruleId":"243","severity":1,"message":"291","line":42,"column":10,"nodeType":"245","messageId":"246","endLine":42,"endColumn":19},{"ruleId":"243","severity":1,"message":"292","line":55,"column":9,"nodeType":"245","messageId":"246","endLine":55,"endColumn":14},{"ruleId":"243","severity":1,"message":"260","line":1,"column":27,"nodeType":"245","messageId":"246","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"289","line":7,"column":10,"nodeType":"245","messageId":"246","endLine":7,"endColumn":19},{"ruleId":"243","severity":1,"message":"291","line":41,"column":10,"nodeType":"245","messageId":"246","endLine":41,"endColumn":19},{"ruleId":"243","severity":1,"message":"292","line":54,"column":9,"nodeType":"245","messageId":"246","endLine":54,"endColumn":14},{"ruleId":"240","severity":1,"message":"241","line":1,"column":1,"nodeType":"242","endLine":4,"endColumn":3},{"ruleId":"240","severity":1,"message":"241","line":20,"column":1,"nodeType":"242","endLine":23,"endColumn":3},{"ruleId":"275","severity":1,"message":"276","line":66,"column":69,"nodeType":"277","messageId":"278","endLine":66,"endColumn":71},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'fileName' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'itemsPerPage'. Either include it or remove the dependency array.","ArrayExpression",["295"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["296"],"React Hook React.useEffect has missing dependencies: 'isEditDescription', 'isRotate', 'itemsPerPage', and 'totalPage'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setPageNumber' needs the current value of 'totalPage'.",["297"],"React Hook useEffect contains a call to 'setTotalPage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [imageHistory, itemsPerPage, isRotate] as a second argument to the useEffect Hook.",["298"],"'useEffect' is defined but never used.","'ReactPlayer' is defined but never used.","Assign arrow function to a variable before exporting as module default","'treeData' is assigned a value but never used.","'setTreeData' is assigned a value but never used.","'setSelected' is assigned a value but never used.","'setAlertVisible' is assigned a value but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'setProgressVisible' is assigned a value but never used.","'playlistId' is assigned a value but never used.","'setPlaylistId' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getAllPlaylists'. Either include it or remove the dependency array.",["299"],"'nodeId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'renderTree' is assigned a value but never used.","'Form' is defined but never used.","'Collapse' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getAllVideos'. Either include it or remove the dependency array.",["300"],"'beep' is defined but never used.","React Hook useEffect has missing dependencies: 'getAllVideos' and 'history'. Either include them or remove the dependency array.",["301"],"Array.prototype.filter() expects a value to be returned at the end of arrow function.","'StepLabel' is defined but never used.","'InputLabel' is defined but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [itemsPerPage]",{"range":"316","text":"317"},"Update the dependencies array to be: [itemsPerPage, props]",{"range":"318","text":"319"},"Update the dependencies array to be: [imageHistory, isEditDescription, isRotate, itemsPerPage, totalPage]",{"range":"320","text":"321"},"Add dependencies array: [imageHistory, itemsPerPage, isRotate]",{"range":"322","text":"323"},"Update the dependencies array to be: [getAllPlaylists]",{"range":"324","text":"325"},"Update the dependencies array to be: [getAllVideos]",{"range":"326","text":"327"},"Update the dependencies array to be: [getAllVideos, history, props]",{"range":"328","text":"329"},[7864,7866],"[itemsPerPage]",[3945,3952],"[itemsPerPage, props]",[4687,4701],"[imageHistory, isEditDescription, isRotate, itemsPerPage, totalPage]",[9524,9524],", [imageHistory, itemsPerPage, isRotate]",[6317,6319],"[getAllPlaylists]",[5797,5799],"[getAllVideos]",[2127,2134],"[getAllVideos, history, props]"]